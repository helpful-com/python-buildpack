# Install dependencies with Pip.
puts-cmd "pip install --verbose -r requirements.txt"

set +e
# delete any existing egg links, to uninstall exisisting installations.
find .cloudfoundry/python/lib/python*/site-packages/ -name "*.egg-link" -delete 2> /dev/null
find .cloudfoundry/python/lib/python*/site-packages/ -name "*.pth" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#/app/#/$(pwd)/#" &> /dev/null
set -e

set +e
# Support for the above, for PyPy.
find .cloudfoundry/python/lib-python/*/site-packages/ -name "*.egg-link" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#/app/#$(pwd)/#" &> /dev/null
find .cloudfoundry/python/lib-python/*/site-packages/ -name "*.pth" -print0 2> /dev/null | xargs -r -0 -n 1 sed -i -e "s#/app/#/$(pwd)/#" &> /dev/null
set -e

if test -d $BUILD_DIR/vendor; then
  echo "Building using unspecified vendor directory $BUILD_DIR/vendor"
  /app/.cloudfoundry/python/bin/pip install --verbose -r requirements.txt --exists-action=w --src=/app/.cloudfoundry/src --no-index --find-links=file://$BUILD_DIR/vendor | cleanup | indent
  cp requirements.txt .cloudfoundry/python/requirements-declared.txt
  /app/.cloudfoundry/python/bin/pip freeze --find-links=file://$BUILD_DIR/vendor --disable-pip-version-check > .cloudfoundry/python/requirements-installed.txt
else
  echo "Calling pip install" 
  /app/.cloudfoundry/python/bin/pip install --verbose -r requirements.txt --exists-action=w --src=/app/.cloudfoundry/src | cleanup | indent

  cp requirements.txt .cloudfoundry/python/requirements-declared.txt
  /app/.cloudfoundry/python/bin/pip freeze > .cloudfoundry/python/requirements-installed.txt
fi

echo
